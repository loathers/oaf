generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  playerId            Int                 @id
  playerName          String
  accountCreationDate DateTime?
  doneWithSkills      Boolean             @default(false)
  brainiac            Boolean             @default(false)
  discordId           String?
  latitude            Float?
  longitude           Float?
  thiccEntered        Boolean             @default(false)
  thiccGifteeId       Int?                @unique
  thiccGiftee         Player?             @relation("ThiccGiftee", fields: [thiccGifteeId], references: [playerId])
  thiccGifter         Player?             @relation("ThiccGiftee")
  standingOffers      StandingOffer[]
  raidParticipation   RaidParticipation[]
  raffleWins          RaffleWins[]

  flowerPriceAlert FlowerPriceAlert?
}

model StandingOffer {
  itemId    Int
  price     BigInt
  buyerId   Int
  offeredAt DateTime @default(now())
  buyer     Player   @relation(fields: [buyerId], references: [playerId])

  @@unique([buyerId, itemId])
}

model Reminder {
  id                 Int      @id @default(autoincrement())
  guildId            String?
  channelId          String
  userId             String
  messageContents    String
  reminderDate       DateTime
  interactionReplyId String?
  reminderSent       Boolean  @default(false)
}

model Raid {
  id            Int                 @id
  clanId        Int
  participation RaidParticipation[]
}

model RaidParticipation {
  raidId   Int
  raid     Raid   @relation(fields: [raidId], references: [id])
  playerId Int
  player   Player @relation(fields: [playerId], references: [playerId])
  skills   Int
  kills    Int

  @@unique([raidId, playerId])
}

model Tag {
  tag       String   @id
  reason    String?
  channelId String
  guildId   String
  messageId String
  createdAt DateTime @default(now())
  createdBy String

  // A message can only have one tag
  @@unique([guildId, channelId, messageId])
}

model Setting {
  key   String @id
  value Json
}

model Raffle {
  gameday     Int          @id
  firstPrize  Int
  secondPrize Int
  winners     RaffleWins[]
  messageId   String
}

model RaffleWins {
  gameday  Int
  raffle   Raffle @relation(fields: [gameday], references: [gameday])
  playerId Int
  player   Player @relation(fields: [playerId], references: [playerId])
  place    Int
  tickets  Int

  @@unique([gameday, playerId])
}

model FlowerPrices {
  id        Int      @id @default(autoincrement())
  red       Int
  white     Int
  blue      Int
  createdAt DateTime @default(now())
}

model FlowerPriceAlert {
  playerId Int    @id
  player   Player @relation(fields: [playerId], references: [playerId])
  price    Int
}
